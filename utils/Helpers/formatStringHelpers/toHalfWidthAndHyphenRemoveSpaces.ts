// 全角文字、ハイフンを半角に変換(!,?なども含む)、スペースは削除
export const toHalfWidthAndHyphenRemoveSpaces = (strVal: string) => {
  // 全角文字コードの範囲は65281 - 65374、スペースの全角文字コードは12288
  return strVal
    .replace(/[\s　]+/g, "") // 全角・半角スペースを除去
    .replace(/[０-９]/g, (match) => String.fromCharCode(match.charCodeAt(0) - 0xfee0)) // 全角数字を半角に
    .replace(/[！-～]/g, (match) => String.fromCharCode(match.charCodeAt(0) - 0xfee0)) // その他の全角文字を半角に（数字を除く）
    .replace(/ー/g, "-") // 全角ハイフンを半角ハイフンに
    .replace(/−/g, "-"); // 全角マイナスを半角ハイフンに
};

/**
 * removeSpaces 関数が文字列内の全ての全角および半角スペースを取り除きます。replace メソッドの正規表現/[\s　]+/gは、\sで半角スペース類（空白、タブ、改行など）を、　（全角スペース）を対象としています。gフラグによって文字列全体から全てのマッチを探し、置換します。

この方法を利用すれば、指定された住所の各部分から不要なスペースを効率的に除去し、整形された住所を生成できます。


1. 全角数字を半角に変換
javascript
コードをコピーする
.replace(/[０-９]/g, match => String.fromCharCode(match.charCodeAt(0) - 0xFEE0))
この行は、全角数字（０, １, ２, ... ９）を半角数字（0, 1, 2, ... 9）に変換します。正規表現[０-９]は全角の０から９までを指します。マッチした全角数字の文字コードから0xFEE0（全角と半角の差）を引くことで、対応する半角数字の文字コードに変換されます。

2. その他の全角文字を半角に変換
javascript
コードをコピーする
.replace(/[！-～]/g, match => String.fromCharCode(match.charCodeAt(0) - 0xFEE0))
この行は、全角の英数字や記号を半角に変換します。正規表現[！-～]は全角の感嘆符（！）から全角のチルダ（～）までをカバーします。この範囲には全角の英字や一部の記号も含まれます。こちらも同様に、マッチした全角文字の文字コードから0xFEE0を引くことで、対応する半角文字に変換します。

補足
String.fromCharCode()は、指定されたUnicode値から文字を作成します。
charCodeAt(0)は、指定された文字列の最初の文字のUnicode値を返します。
これらのメソッドを使うことで、特定の全角文字を対応する半角文字に効率的に変換できます。この変換は特に住所データの正規化やフォーム入力値の統一に役立ちます。
 */
